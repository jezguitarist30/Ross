@*
    Shows post. This is almost identical to /Landing/uBlogsyLandingShowPost.cshtml but gives you the option to customise it individually.
*@

@using uBlogsy.BusinessLogic
@using uBlogsy.Common.Extensions
@inherits UmbracoTemplatePage
@{
    // image settings
    const string defaultImage = null;
    const int imageHieght = -1; // -1 if no height specified
    const int imageWidth = 300;

    var node = (IPublishedContent)ViewData["Node"];

    var url = node.Url().GetUrlWithQueryString(Request.QueryString, new[] { "action", "success" });

    @ShowPost(node, url, imageHieght, imageWidth, defaultImage)
}



@helper ShowPost(IPublishedContent node, string url, int imageHieght, int imageWidth, string defaultImage)
{
        var landing = DataService.Instance.GetLanding(Model.Content);
        var authors = PostService.Instance.GetAuthors(node, false).ToList();
        var labels = PostService.Instance.GetLabels((IPublishedContent)ViewData["Node"], false);
        
    <div class="blog-post">
        <!-- Entry is the one post for each user -->
        <div class="entry">
            <!-- Heading of the  post -->
            <h3>@node.GetPropertyValue("uBlogsyContentTitle")</h3>

            <!-- Meta for this block -->
            <div class="meta">
                <i class="fa fa-calendar"></i>&nbsp; @(node.GetPropertyValue<DateTime>("uBlogsyPostDate").ToString("dddd MMMM d, yyyy")) &nbsp;&nbsp;&nbsp;
                @RenderAuthors(landing, authors)
                @RenderCategories(labels)                
                <span class="pull-right"><i class="fa fa-comment"></i> <a href="#">&nbsp;2 Comments</a></span>
            </div>
            <!-- Post Images -->
            <div class="blog-img">
                @RenderPostImage(node, imageHieght, imageWidth, defaultImage)
            </div>
            <!-- Para -->
            @Html.Raw(library.RenderMacroContent(node.GetPropertyValue<string>("uBlogsyContentBody"), node.Id))
            
            @RenderSocialMedia(node)
        </div>
           
        <div class="comments">
            <div class="title"><h5>2 Comments</h5></div>
            <ul class="comment-list">
                <li class="comment">
                    <a class="pull-left" href="#">
                        <img class="avatar" src="img/team1.jpg" alt="" />
                    </a>
                    <div class="comment-author"><a href="#">Uiousve Rsionsha</a></div>
                    <div class="cmeta">Commented on 02/01/2014</div>
                    <p>Nulla facilisi. Sed justo dui, scelerisque ut consectetur vel, eleifend id erat. Phasellus condimentum rutrum aliquet. Quisque eu consectetur erat.</p>
                    <div class="clearfix"></div>
                </li>
                <li class="comment reply">
                    <a class="pull-left" href="#">
                        <img class="avatar" src="img/team1.jpg" alt="" />
                    </a>
                    <div class="comment-author"><a href="#">Uiousve Rsionsha</a></div>
                    <div class="cmeta">Commented on 03/01/2014</div>
                    <p>Nulla facilisi. Sed justo dui, scelerisque ut consectetur vel, eleifend id erat. Phasellus condimentum rutrum aliquet. Quisque eu consectetur erat.</p>
                    <div class="clearfix"></div>
                </li>
            </ul>
        </div>
        
        
        <div class="respond well">
            <div class="title"><h5>Post Reply</h5></div>
            <div class="form">
                <form class="form-horizontal" role="form">
                    <div class="form-group">
                        <label for="name" class="col-lg-2 control-label">Name</label>
                        <div class="col-lg-10">
                            <input type="text" class="form-control" id="name" placeholder="Name">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="email" class="col-lg-2 control-label">Email</label>
                        <div class="col-lg-10">
                            <input type="email" class="form-control" id="email" placeholder="Email">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="website" class="col-lg-2 control-label">Website</label>
                        <div class="col-lg-10">
                            <input type="text" class="form-control" id="website" placeholder="WebSite">
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-lg-2" for="comment">Comment</label>
                        <div class="col-lg-10">
                            <textarea class="form-control" id="comment" rows="3" placeholder="Comments"></textarea>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-lg-offset-2 col-lg-10">
                            <button type="submit" class="btn btn-info">Submit</button> &nbsp;
                            <button type="reset" class="btn btn-default">Reset</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>           
    </div>
}




@helper RenderSocialMedia(IPublishedContent node)
{ 
    var showSocialLinks = DataService.Instance.GetValueFromLanding(node, "uBlogsyGeneralShowSocialMedia");    
    if (showSocialLinks == "True")
    {
        //AddThis Button BEGIN
        <aside class="addthis_toolbox addthis_default_style">
            <a class="addthis_button_google_plusone" g:plusone:size="medium"></a>
            <a class="addthis_button_tweet"></a>
            <a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
        </aside>
        <script type="text/javascript" src="http://s7.addthis.com/js/250/addthis_widget.js#pubid=xa-4f20a32b369fc730"></script>
    }
}


@helper RenderPostImage(IPublishedContent node, int imageHieght, int imageWidth, string defaultImage)
{
    var imageId = node.GetPropertyValue<string>("uBlogsyPostImage");

    if (string.IsNullOrWhiteSpace(imageId) && string.IsNullOrWhiteSpace(defaultImage))
    {
        // no property or default so do nothing
        return;
    }

    var imageData = new Dictionary<string, object>()
    {
        {"Alias", "uBlogsyPostImage"},
        {"Suffix", ""},
        {"Height", imageHieght},
        {"Width", imageWidth},
        {"CssClass", "img-responsive img-thumbnail"},
        {"Title", "Main Image"},
        {"Map", string.Empty},
        {"DefaultImage", defaultImage},
        {"Node", node}
    };
              
    @Html.Partial("~/Views/Partials/uBlogsy/Shared/uBlogsyShowImage.cshtml", imageData)
    
}


@helper RenderAuthors(IPublishedContent landing, List<IPublishedContent> authors)
{
    foreach (var a in authors)
    {
        var name = a.GetPropertyValue<string>("uBlogsyAuthorName").Trim();
        <i class="fa fa-user"></i>
        @Html.Raw("&nbsp;")
        <a href="@landing.Url()?author=@Server.UrlEncode(name)" title="@name">@name</a>if (a != authors.Last())
        {<span>,</span>}
        @Html.Raw("&nbsp;&nbsp;&nbsp;")
    }
}

@helper RenderCategories(IEnumerable<IPublishedContent> labels)
{
    if (!labels.Any()) { return; }

    // get landing page
    var landing = DataService.Instance.GetLanding(Model.Content);

    foreach (var node in labels)
    {
        var label = node.GetPropertyValue<string>("uBlogsyLabelName");
        if (!string.IsNullOrEmpty(label))
        {
            <i class="fa fa-folder-open"></i>
            <a href="@landing.Url()?label=@Server.UrlEncode(label)" title="@label">&nbsp; @label</a>
            @Html.Raw("&nbsp;&nbsp;&nbsp;")
        }


    }
}
